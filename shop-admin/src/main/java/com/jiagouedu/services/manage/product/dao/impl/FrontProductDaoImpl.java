package com.jiagouedu.services.manage.product.dao.impl;import com.jiagouedu.core.dao.BaseDao;import com.jiagouedu.core.dao.page.PagerModel;import com.jiagouedu.services.manage.product.bean.FrontProduct;import com.jiagouedu.services.manage.product.bean.ProductStockInfo;import com.jiagouedu.services.manage.product.dao.FrontProductDao;import org.springframework.stereotype.Repository;import javax.annotation.Resource;import java.util.List;@Repository("productDaoFront")public class FrontProductDaoImpl implements FrontProductDao {    @Resource	private BaseDao dao;	public void setDao(BaseDao dao) {		this.dao = dao;	}	public PagerModel selectPageList(FrontProduct e) {		return dao.selectPageList("front.product.selectPageList",				"front.product.selectPageCount", e);	}	public List selectList(FrontProduct e) {		return dao.selectList("front.product.selectList", e);	}	public FrontProduct selectOne(FrontProduct e) {		return (FrontProduct) dao.selectOne("front.product.selectOne", e);	}	public int delete(FrontProduct e) {		return dao.delete("front.product.delete", e);	}	public int update(FrontProduct e) {		return dao.update("front.product.update", e);	}	public int deletes(String[] ids) {		FrontProduct e = new FrontProduct();		for (int i = 0; i < ids.length; i++) {			e.setId(ids[i]);			delete(e);		}		return 0;	}	public int insert(FrontProduct e) {		return dao.insert("front.product.insert", e);	}	public int deleteById(int id) {		return dao.delete("front.product.deleteById", id);	}		public FrontProduct selectById(String id) {		return (FrontProduct) dao.selectOne("front.product.selectById", id);	}	public List<FrontProduct> selectParameterList(String id) {		return dao.selectList("front.product.selectParameterList", id);	}	@Override	public List<ProductStockInfo> selectStockList(FrontProduct product) {		return dao.selectList("front.product.selectStockList", product);	}	@Override	public List<FrontProduct> selectListProductHTML(FrontProduct product) {		return dao.selectList("front.product.selectListProductHTML", product);	}	@Override	public List<FrontProduct> selectProductListByIds(FrontProduct p) {		return dao.selectList("front.product.selectProductListByIds", p);	}	@Override	public void updateStockAfterPaySuccess(FrontProduct product) {		dao.update("front.product.updateStockAfterPaySuccess",product);	}	@Override	public List<FrontProduct> selectHotSearch(FrontProduct p) {		return dao.selectList("front.product.selectHotSearch",p);	}	@Override	public List<FrontProduct> loadHotProductShowInSuperMenu(FrontProduct product) {		return dao.selectList("front.product.loadHotProductShowInSuperMenu", product);	}	@Override	public void updateHit(FrontProduct p) {		dao.update("front.product.updateHit",p);	}	@Override	public List<FrontProduct> selectPageLeftHotProducts(FrontProduct p) {		return dao.selectList("front.product.selectPageLeftHotProducts",p);	}	@Override	public List<FrontProduct> selectActivityProductList(FrontProduct p) {		return dao.selectList("front.product.selectActivityProductList",p);	}}